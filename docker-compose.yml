version: '3'
services:
  postgres:
    container_name: postgres
    image: 'postgres:latest'
    environment:
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
    networks:
      - 'elenchus-network'
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - '5432:5432'

  nginx:
    container_name: nginx
    depends_on:
      - api
      - client
    restart: always
    build:
      dockerfile: Dockerfile
      context: './nginx'
    ports:
      - '3050:80'
    networks:
      - 'elenchus-network'

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    restart: always
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_DEFAULT_EMAIL}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_DEFAULT_PASSWORD}
    depends_on:
      - postgres
    ports:
      - '5050:80'
    networks:
      - 'elenchus-network'

  api:
    container_name: api
    build:
      dockerfile: Dockerfile
      context: './server'
    volumes:
      - /app/node_modules
      - ./server:/server
    environment:
      - PGUSER=${POSTGRES_USER}
      - PGHOST=postgres
      - PGDATABASE=${POSTGRES_DB}
      - PGPASSWORD=${POSTGRES_PASSWORD}
      - PGPORT=5432
    ports:
      - '5001:5001'
    networks:
      - 'elenchus-network'

  client:
    container_name: client
    stdin_open: true
    build:
      context: ./client
    volumes:
      - /app/node_modules
      - ./client:/app
    ports:
      - '5173:5173'
    networks:
      - 'elenchus-network'

volumes:
  pgdata:
    driver: local
networks:
  elenchus-network:
    driver: bridge
